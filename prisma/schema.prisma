generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String  @id @default(cuid())
  name       String
  phone      String  @unique
  password   String
  image      Image?  @relation(fields: [imageId], references: [id])
  role       Role    @default(USER)
  isVerified Boolean @default(false)

  verificationCode Int?
  verificationDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageId   String?

  address       Json?   @db.Json
  paymentMethod String?
  stores        Store[] @relation("UserStores")

  @@unique([imageId])
  @@map("users")
}

enum Role {
  USER
  ADMIN
  SELLER
}

model Image {
  id         String   @id @default(cuid())
  url        String   @db.Text
  key        String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user          User?
  Category      Category?    @relation(fields: [categoryId], references: [id])
  categoryId    String?
  SubCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId String?

  storeCover  Store?  @relation(fields: [storeId], references: [id])
  storeId     String?
  storeIcon   Store?  @relation("storeLogo", fields: [storeIconId], references: [id])
  storeIconId String? @unique

  @@unique([storeIconId, storeId])
  @@index([storeIconId])
  @@index([storeId])
  @@index([subCategoryId])
  @@index([categoryId])
}

model Category {
  id            String        @id @default(uuid())
  name          String
  name_fa       String?
  images        Image[]
  url           String        @unique
  featured      Boolean       @default(false)
  subCategories SubCategory[] @relation("CategoryToSubcategory")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubCategory {
  id       String  @id @default(uuid())
  name     String
  name_fa  String?
  images   Image[]
  url      String  @unique
  featured Boolean @default(false)

  categoryId String
  category   Category @relation("CategoryToSubcategory", fields: [categoryId], references: [id])

  //   products Product[] @relation("SubCategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

enum StoreStatus {
  PENDING
  ACTIVE
  BANNED
  DISABLED
}

model Store {
  id                                  String      @id @default(uuid())
  name                                String
  name_fa                             String?
  description                         String      @db.Text
  description_fa                      String?     @db.Text
  email                               String      @unique
  phone                               String
  url                                 String      @unique
  logo                                Image?      @relation("storeLogo")
  imageId                             String
  cover                               Image[]
  status                              StoreStatus @default(PENDING)
  averageRating                       Float       @default(0)
  numReviews                          Int         @default(0)
  featured                            Boolean     @default(false)
  returnPolicy                        String      @default("Return in 30 days.")
  defaultShippingService              String      @default("International Delivery")
  defaultShippingFeePerItem           Float       @default(0)
  defaultShippingFeeForAdditionalItem Float       @default(0)
  defaultShippingFeePerKg             Float       @default(0)
  defaultShippingFeeFixed             Float       @default(0)
  defaultDeliveryTimeMin              Int         @default(7)
  defaultDeliveryTimeMax              Int         @default(31)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  userId String
  user   User   @relation("UserStores", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  //   products      Product[]      @relation("StoreToProduct")
  //   shippingRates ShippingRate[] @relation("StoreShippingRates")
  //   followers     User[]         @relation("UserFollowingStore")
  //   cartItems     CartItem[]     @relation("CartItemToStore")
  //   orderGroups   OrderGroup[]   @relation("OrderGroupToStore")
  //   coupons Coupon[] @relation("CouponToStore")
  @@index([userId])
  @@index([imageId])
}
